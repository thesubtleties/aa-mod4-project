version: '3.8'

services:
  spookyspot-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    pull_policy: build
    container_name: spookyspot-frontend
    restart: unless-stopped
    networks:
      - shared_portainer_network
    depends_on:
      spookyspot-backend:
        condition: service_healthy # Add health check dependency

  spookyspot-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    pull_policy: build
    container_name: spookyspot-backend
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=spookyspot
      - DB_HOST=spookyspot-db
      - SCHEMA=${SCHEMA}
      - JWT_SECRET=${JWT_SECRET} # Missing JWT config
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
    networks:
      - shared_portainer_network
    depends_on:
      spookyspot-db:
        condition: service_healthy # Add health check dependency
    restart: unless-stopped

  spookyspot-db:
    image: postgres:15-alpine
    pull_policy: always
    container_name: spookyspot-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=spookyspot
      - POSTGRES_SCHEMA=${SCHEMA} # Add schema
    volumes:
      - spookyspot_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql # Add init script
    networks:
      - shared_portainer_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d spookyspot']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
